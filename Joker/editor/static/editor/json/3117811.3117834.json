{"authors": [{"first": "Haoyang", "last": "Wu"}, {"first": "Tao", "last": "Wang"}, {"first": "Zengwen", "last": "Yuan"}, {"first": "Chunyi", "last": "Peng"}, {"first": "Zhiwei", "last": "Li"}, {"first": "Zhaowei", "last": "Tan"}, {"first": "Boyan", "last": "Ding"}, {"first": "Xiaoguang", "last": "Li"}, {"first": "Yuanjie", "last": "Li"}, {"first": "Jun", "last": "Liu"}, {"first": "Songwu", "last": "Lu"}], "title": "The <i>Tick</i> Programmable Low-Latency SDR System", "year": "2017", "isbn": "9781450349161", "publisher": "Association for Computing Machinery", "address": "New York, NY, USA", "url": "https://doi.org/10.1145/3117811.3117834", "doi": "10.1145/3117811.3117834", "abstract": "Tick is a new SDR system that provides programmability and ensures low latency at both PHY and MAC. It supports modular design and element-based programming, similar to the Click router framework [23]. It uses an accelerator-rich architecture, where an embedded processor executes control flows and handles various MAC events. User-defined accelerators offload those tasks, which are either computation-intensive or communication-heavy, or require fine-grained timing control, from the processor, and accelerate them in hardware. Tick applies a number of hardware and software co-design techniques to ensure low latency, including multi-clock-domain pipelining, field-based processing pipeline, separation of data and control flows, etc. We have implemented Tick and validated its effectiveness through extensive evaluations as well as two prototypes of 802.11ac SISO/MIMO and 802.11a/g full-duplex.", "booktitle": "Proceedings of the 23rd Annual International Conference on Mobile Computing and Networking", "numpages": "13", "keywords": ["full-duplex", "programmability", "802.11ac", "software-defined radio", "PHY", "MAC", "802.11", "low latency"], "location": "Snowbird, Utah, USA", "series": "MobiCom '17"}
{"authors": [{"first": "Petko", "last": "Georgiev"}, {"first": "Nicholas D.", "last": "Lane"}, {"first": "Kiran K.", "last": "Rachuri"}, {"first": "Cecilia", "last": "Mascolo"}], "title": "LEO: Scheduling Sensor Inference Algorithms across Heterogeneous Mobile Processors and Network Resources", "year": "2016", "isbn": "9781450342261", "publisher": "Association for Computing Machinery", "address": "New York, NY, USA", "url": "https://doi.org/10.1145/2973750.2973777", "doi": "10.1145/2973750.2973777", "abstract": "Mobile apps that use sensors to monitor user behavior often employ resource heavy inference algorithms that make computational offloading a common practice. However, existing schedulers/offloaders typically emphasize one primary offloading aspect without fully exploring complementary goals (e.g., heterogeneous resource management with only partial visibility into underlying algorithms, or concurrent sensor app execution on a single resource) and as a result, may overlook performance benefits pertinent to sensor processing.We bring together key ideas scattered in existing offloading solutions to build LEO -- a scheduler designed to maximize the performance for the unique workload of continuous and intermittent mobile sensor apps without changing their inference accuracy. LEO makes use of domain specific signal processing knowledge to smartly distribute the sensor processing tasks across the broader range of heterogeneous computational resources of high-end phones (CPU, co-processor, GPU and the cloud). To exploit short-lived, but substantial optimization opportunities, and remain responsive to the needs of near real-time apps such as voice-based natural user interfaces, LEO runs as a service on a low-power co-processor unit (LPU) to perform both frequent and joint schedule optimization for concurrent pipelines. Depending on the workload and network conditions, LEO is between 1.6 and 3 times more energy efficient than conventional cloud offloading with CPU-bound sensor sampling. In addition, even if a general-purpose scheduler is optimized directly to leverage an LPU, we find LEO still uses only a fraction (&lt; 1/7) of the energy overhead for scheduling and is up to 19% more energy efficient for medium to heavy workloads.", "booktitle": "Proceedings of the 22nd Annual International Conference on Mobile Computing and Networking", "numpages": "14", "keywords": ["scheduling", "offloading", "mobile sensing", "DSP"], "location": "New York City, New York", "series": "MobiCom '16"}
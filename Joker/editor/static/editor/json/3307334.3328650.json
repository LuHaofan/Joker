{"authors": [{"first": "Harishankar", "last": "Vishwanathan"}, {"first": "Chang Min", "last": "Park"}, {"first": "Sidharth Kumar", "last": "Mishra"}, {"first": "Karthik", "last": "Dantu"}, {"first": "Steven Y.", "last": "Ko"}, {"first": "Lukasz", "last": "Ziarek"}], "title": "Partitioning Garbage Collection Between the Secure and Normal Worlds for Trusted Applications (Poster)", "year": "2019", "isbn": "9781450366618", "publisher": "Association for Computing Machinery", "address": "New York, NY, USA", "url": "https://doi.org/10.1145/3307334.3328650", "doi": "10.1145/3307334.3328650", "abstract": "Trusted Applications (TAs) written for Trusted Execution Environments (TEEs) using ARM TrustZone are currently written in C; there is limited support for higher-level languages. This leads to common manual memory management problems like buffer overflow and use-after-free. Higher-level languages, which have managed runtimes, allow for automated memory management, the benefits of which are widely accepted. To allow for automated memory management of TAs, we need to have a runtime that handles allocation and garbage collection (GC). However, having the entire allocator and GC in the secure world would increase the Trusted Computing Base (TCB) of the secure world. We propose TrustGC, a mechanism to partition garbage collection and allocation between the secure world and the normal world. TrustGC allows for automated memory management of TAs by leveraging the help of a GC partly running in the normal world.", "booktitle": "Proceedings of the 17th Annual International Conference on Mobile Systems, Applications, and Services", "numpages": "2", "keywords": ["memory management", "security", "trustzone", "garbage collection"], "location": "Seoul, Republic of Korea", "series": "MobiSys '19"}